#BlueJ class context
comment0.target=ICPC
comment0.text=\r\n\ Let\ me\ create\ and\ modify\ an\ ICPC.\r\n\ \r\n\ @author\ Daniel\ Rojas\r\n\ @author\ Sebastian\ Zamora\r\n\ @version\ 3.0\r\n
comment1.params=length\ widht
comment1.target=ICPC(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ ICPC\r\n\ @param\ int\ length,\ int\ widht\r\n
comment10.params=locationA\ locationB
comment10.target=void\ delRoad(java.lang.String,\ java.lang.String)
comment10.text=\r\n\ deleate\ routes\r\n\ @param\ \ String\ locationA,\ String\ locationB\r\n\ @return\ void\r\n
comment11.params=interA\ interB\ speedLimit
comment11.target=void\ putSign(java.lang.String,\ java.lang.String,\ int)
comment11.text=\r\n\ create\ new\ Signs\r\n\ @param\ the\ initial\ point\ of\ the\ route\r\n\ @param\ the\ final\ point\ of\ the\ route\r\n\ @param\ the\ route's\ speed\ Limit\r\n
comment12.params=type\ intersectionA\ intersectionB\ speedLimit
comment12.target=void\ putSign(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment13.params=interA\ interB\ speedLimit\ type
comment13.target=void\ plotSign(java.lang.String,\ java.lang.String,\ int,\ java.lang.String)
comment14.params=interA\ interB
comment14.target=void\ removeSign(java.lang.String,\ java.lang.String)
comment14.text=\r\n\ remove\ signs\r\n\ @param\ the\ initial\ point\ of\ the\ route\r\n\ @param\ the\ final\ point\ of\ the\ route\r\n
comment15.params=interA\ interB
comment15.target=void\ remove(java.lang.String,\ java.lang.String)
comment16.params=intA\ intB
comment16.target=java.lang.String\ validateRoute(java.lang.String,\ java.lang.String)
comment17.params=
comment17.target=java.lang.String[]\ intersection()
comment17.text=\r\n\ Know\ the\ intersections\ in\ ICPC\r\n\ @return\ String[]\r\n
comment18.params=
comment18.target=java.lang.String[][]\ routes()
comment18.text=\r\n\ Know\ the\ routes\ in\ ICPC\r\n\ @return\ String[][]\r\n
comment19.params=
comment19.target=java.lang.String[][]\ signs()
comment19.text=\ \ \ \ \r\n\ Know\ the\ routes\ sings\ in\ ICPC\r\n\ @return\ String[][]\r\n
comment2.params=length\ widht\ cost
comment2.target=ICPC(int,\ int,\ int)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ ICPC\ knowing\ the\ cost\r\n\ @param\ int\ length,\ int\ widht\ ,\ int\ cost\r\n
comment20.params=
comment20.target=void\ makeVisible()
comment20.text=\ make\ all\ the\ diagram\ visible\r\n\ @param\ ()\r\n\ @return\ void\r\n
comment21.params=
comment21.target=void\ makeInvisible()
comment21.text=\r\n\ make\ all\ the\ diagram\ invisible\r\n\ @param\ ()\r\n\ @return\ void\r\n
comment22.params=
comment22.target=java.lang.String[][]\ wrongSings()
comment23.params=
comment23.target=void\ isWrong()
comment24.params=
comment24.target=java.lang.String[][]\ unNecesarySings()
comment25.params=
comment25.target=void\ isNecesary()
comment26.params=
comment26.target=int\ totalSingsCost()
comment26.text=\r\n\ Show\ the\ best\ cost\ of\ ICPC\r\n\ @return\ the\ total\ Cost\r\n
comment27.params=
comment27.target=boolean\ ok()
comment27.text=\r\n\ Check\ if\ the\ methot\ was\ complit\ satisfactory\r\n\ @return\ a\ boolean\ confirm\ or\ deny\ the\ \ methot\ was\ complit\ satisfactory\r\n
comment28.params=
comment28.target=void\ finish()
comment28.text=\r\n\ Finish\ the\ simulator\r\n
comment3.params=cost\ routesSpeedLimit
comment3.target=ICPC(int,\ int[][])
comment3.text=\r\n\ Constructor\ for\ objects\ of\ class\ ICPC\ knowing\ the\ cost\r\n\ @param\ int\ cost\r\n\ @\ int[][]\ routesSpeedLimit\r\n
comment4.params=color\ x\ y
comment4.target=void\ addIntersection(java.lang.String,\ int,\ int)
comment4.text=\r\n\ create\ new\ intersections\r\n\ @param\ the\ name\ of\ the\ color\r\n\ @param\ the\ xposition\ of\ the\ intersection\ \r\n\ @param\ the\ yposition\ of\ the\ intersection\r\n
comment5.params=type\ color\ x\ y
comment5.target=void\ addIntersection(java.lang.String,\ java.lang.String,\ int,\ int)
comment5.text=\r\n\ create\ new\ intersections\r\n\ @param\ the\ name\ of\ the\ color\r\n\ @param\ the\ xposition\ of\ the\ intersection\ \r\n\ @param\ the\ yposition\ of\ the\ intersection\r\n
comment6.params=color
comment6.target=void\ delIntersection(java.lang.String)
comment6.text=\r\n\ deleate\ intersections\r\n\ @param\ \ String\ color\r\n\ @return\ void\r\n
comment7.params=interA\ interB
comment7.target=void\ addRoute(java.lang.String,\ java.lang.String)
comment7.text=\r\n\ create\ new\ routes\r\n\ @param\ the\ color\ of\ the\ intersection\ A\r\n\ @param\ the\ color\ of\ the\ intersection\ B\r\n\ @return\ void\r\n
comment8.params=type\ interA\ interB
comment8.target=void\ addRoute(java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=\r\n\ create\ new\ routes\r\n\ @param\ the\ color\ of\ the\ intersection\ A\r\n\ @param\ the\ color\ of\ the\ intersection\ B\r\n\ @return\ void\r\n
comment9.params=intersectionA\ intersectionB\ speedLimit
comment9.target=void\ routeSpeedLimit(java.lang.String,\ java.lang.String,\ int)
comment9.text=\r\n\ This\ let\ me\ create\ a\ route\ with\ a\ speed\ limit\r\n\ @param\ the\ initial\ point\ of\ the\ route\r\n\ @param\ the\ final\ point\ of\ the\ route\r\n\ @param\ the\ route's\ speed\ Limit\r\n
numComments=29
