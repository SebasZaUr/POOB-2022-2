#BlueJ class context
comment0.target=Fraction
comment0.text=\r\nFraction\r\n\ This\ class\ implements\ the\ Fraction\ data\ type;\ that\ is,\ a\ rational\ number\ that\ can\ be\ written\ in\ the\ form\ p/q,\ where\ p\ and\ q\ are\ integers,\ with\ q\ \!\=\ 0\r\n\ The\ implementation\ is\ done\ by\ immutable\ objects\r\n\ INV\:\ The\ fractional\ is\ represented\ irreducibly.\r\n\ @author\ ESCUELA\r\n
comment1.params=a\ b
comment1.target=int\ gcd(int,\ int)
comment1.text=Calculate\ the\ greatest\ common\ divisor\ of\ two\ integers\r\n\ We\ will\ implement\ it\ using\ the\ recursive\ algorithm\r\n\ @param\ a\ first\ integer\r\n\ @param\ b\ second\ integer\r\n\ @return\ the\ Greatest\ Common\ Divisor\ of\ a\ and\ b\r\n
comment10.params=other
comment10.target=Fraction\ substract(Fraction)
comment10.text=\r\n\ Substract\ this\ fraction\ with\ another\ fraction\r\n\ @param\ other\ is\ another\ fractional\r\n\ @return\ this-other\r\n
comment11.params=other
comment11.target=Fraction\ multiply(Fraction)
comment11.text=\r\n\ Multiply\ this\ fraction\ with\ another\ fraction\r\n\ @param\ other\ is\ another\ fractional\r\n\ @return\ this*other\r\n
comment12.params=other
comment12.target=Fraction\ divide(Fraction)
comment12.text=Divide\ this\ fraction\ with\ another\ fraction\r\n\ @param\ other\ is\ another\ fractional\r\n\ @return\ this/other\r\n
comment13.params=obj
comment13.target=boolean\ equals(java.lang.Object)
comment14.params=other
comment14.target=boolean\ equals(Fraction)
comment14.text=Compare\ this\ fraction\ to\ another\ fraction\r\n\ @param\ other\ eL\ other\ fractional\r\n\ @return\ true\ if\ this\ fraction\ is\ mathematically\ equal\ to\ the\ other\ fraction,\ False\ d.l.c.\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\ Calculate\ the\ string\ representation\ of\ a\ fraction\ in\ mixed\ simplified\ format\r\n\ @see\ java.lang.Object\#toString(java.lang.Object)\r\n
comment2.params=numerator\ denominator
comment2.target=Fraction(int,\ int)
comment2.text=Create\ a\ new\ fraction,\ given\ the\ numerator\ and\ denominator\r\n\ @param\ numerator\r\n\ @param\ denominator.\ denominator\ <>\ 0\r\n
comment3.params=integer
comment3.target=Fraction(int)
comment3.text=Create\ a\ fraction\ corresponding\ to\ an\ integer\r\n\ @param\ integer\ the\ integer\ to\ create\r\n
comment4.params=integer\ numerator\ denominator
comment4.target=Fraction(int,\ int,\ int)
comment4.text=Create\ a\ fraction,\ from\ its\ mixed\ representation.\r\n\ The\ number\ created\ is\ mixedInteger\ +\ mixednumerator/mixeddenominator\r\n\ @param\ integer\ the\ integer\ part\ of\ the\ number\r\n\ @param\ numerator\ the\ numerator\ of\ the\ fractional\ part\r\n\ @param\ denominator\ the\ denominator\ of\ the\ fractional\ part.\ denominator\!\=0\r\n
comment5.params=n\ de
comment5.target=void\ determineFraction(int,\ int)
comment6.params=n\ de
comment6.target=void\ simplify(int,\ int)
comment7.params=
comment7.target=int\ numerator()
comment7.text=\r\n\ Return\ the\ numerator\ of\ the\ simplified\ fraction\r\n\ A\ fractional\ p/q\ is\ written\ in\ simplified\ form\ if\ q\ is\ a\ positive\ integer\ and\r\n\ The\ greatest\ common\ divisor\ of\ p\ and\ q\ is\ 1.\r\n\ @return\ The\ numerator\ of\ the\ simplified\ fraction\r\n
comment8.params=
comment8.target=int\ denominator()
comment8.text=\r\n\ Return\ the\ denominator\ of\ the\ simplified\ fraction\r\n\ A\ fractional\ p/q\ is\ written\ in\ simplified\ form\ if\ q\ is\ a\ positive\ integer\ and\r\n\ The\ greatest\ common\ divisor\ of\ p\ and\ q\ is\ 1.\r\n\ @return\ The\ denominator\ of\ the\ simplified\ fraction\r\n
comment9.params=other
comment9.target=Fraction\ sume(Fraction)
comment9.text=\r\n\ Add\ this\ fraction\ with\ another\ fraction\r\n\ @param\ other\ is\ another\ fractional\r\n\ @return\ this+other\r\n
numComments=16
